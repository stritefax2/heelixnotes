[package]
name = "heelix_notes"
version = "0.0.1"
description = "Heelix"
authors = ["Heelix"]
license = ""
repository = ""
default-run = "heelix_notes"
edition = "2021"
rust-version = "1.60"

[build-dependencies]
tauri-build = { version = "2.0", features = [] }

[dependencies]
anyhow = "1.0"
html2text = "0.15.0"
hnsw_rs = { git = "https://github.com/bwsw/hnswlib-rs.git" }

serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
serde_derive = "1.0.188"
tauri = { version = "2.0", features = [
    "tray-icon",
    "image-ico",
    "image-png",
] }
tauri-plugin-shell = "2.0"
tauri-plugin-dialog = "2.0"
tauri-plugin-fs = "2.0"
tauri-plugin-os = "2.0"
screenshots = "0.8.10"
rusty-tesseract = "1.1.10"
image = "0.25.1"
imageproc = "0.25.0"
chrono = "0.4"
async-std = "1.9.0"
tokio = { version = "1", features = ["full"] }
futures = { version = "0.3", features = [] }
itertools = "0.13.0"
reqwest = { version = "0.11", features = ["json", "multipart"] }
openai_api_rust = "0.1.8"
similar = "2.4.0"
regex = "1.5.4"
dissimilar = "1.0.2"
tauri-plugin-autostart = "2.0"
fuzzy-matcher = "0.3"
lazy_static = "1.4.0"
once_cell = "1.19.0"
async-openai = "0.23.3"
thiserror = "1"
rusqlite = { version = "0.29.0", features = ["bundled"] }
rusqlite-from-row = "0.2.0"
active-win-pos-rs = "0.8.2"
log = "^0.4"
tauri-plugin-log = "2.0"
tauri-plugin-positioner = "2.0"
sysinfo = "0.30.6"
strsim = "0.11.0"
diesel = { version = "2.1.3", features = ["sqlite"] }
diesel_migrations = "2.1.0"
tempfile = "3.10.1"

# For document processing
pdf-extract = "0.7.3"
docx-rs = "0.4.7"

# For audio recording and processing
cpal = "0.15.2"
hound = "3.5.0"

# For audio transcription
base64 = "0.13.0"

[target."cfg(not(target_os = \"linux\"))".dependencies]
rdev = { git = "https://github.com/fufesou/rdev" }

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
custom-protocol = ["tauri/custom-protocol"]

[target."cfg(not(target_os = \"windows\"))".dependencies]
strip-ansi-escapes = "0.2"

[target."cfg(any(target_os = \"macos\"))".dependencies]
core-graphics = "0.23.2"
core-foundation = "0.9.3"
accessibility = "0.1.6"
accessibility-sys = "0.1.3"
applications = "0.2.0"


[target."cfg(any(target_os = \"windows\"))".dependencies]
uiautomation = "0.10.1"
winapi = { version = "0.3", features = [
    "winuser",
    "combaseapi",
    "winerror",
    "objbase",
] }
winapi-ui-automation = "0.3.10"
windows-core = "0.56.0"
winreg = "0.52"
[dependencies.windows]
version = "0.56.0"
features = [
    "Win32_System_Com",
    "Win32_UI_Accessibility",
    "Win32_UI_WindowsAndMessaging",
    "UI_UIAutomation",
    "Win32_System_Diagnostics",
    "Win32_Foundation",
    "implement",
    "Win32_UI_Input_KeyboardAndMouse",
]

[lib]
name = "heelix"
path = "src/lib.rs"

[[test]]
name = "tests-macos"
path = "tests/tests-macos.rs"
[[test]]
name = "tests-windows"
path = "tests/tests-windows.rs"
